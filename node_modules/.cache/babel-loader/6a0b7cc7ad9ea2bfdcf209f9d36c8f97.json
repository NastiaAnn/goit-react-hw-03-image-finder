{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Goit/goit-react-hw-03-training/src/components/ImageGallery/ImageGallery.jsx\";\nimport { Component } from 'react';\nimport { Image } from 'components/Image';\nimport { StyledGallery } from './styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  // handleImageClick = image => {\n  //   this.props.onClick(image);\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(StyledGallery, {\n      children: this.props.items.map(_ref => {\n        let {\n          id,\n          webformatURL,\n          largeImageURL,\n          tags\n        } = _ref;\n        return (\n          /*#__PURE__*/\n          // <Image\n          //   key={id}\n          //   smallImgUrl={webformatURL}\n          //   bigImgUrl={largeImageURL}\n          //   imgDescr={tags}\n          //   onClick={() =>\n          //     this.handleImageClick({ id, webformatURL, largeImageURL, tags })\n          //   }\n          // />\n          _jsxDEV(Image, {\n            smallImgUrl: webformatURL,\n            bigImgUrl: largeImageURL,\n            imgDescr: tags\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nImageGallery.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired\n  })).isRequired // onClick: PropTypes.func.isRequired,\n\n};","map":{"version":3,"sources":["/Users/admin/Desktop/Goit/goit-react-hw-03-training/src/components/ImageGallery/ImageGallery.jsx"],"names":["Component","Image","StyledGallery","PropTypes","ImageGallery","render","props","items","map","id","webformatURL","largeImageURL","tags","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAY1C;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,aAAD;AAAA,gBACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,QAA+C;AAAA,YAA9C;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,YAAN;AAAoBC,UAAAA,aAApB;AAAmCC,UAAAA;AAAnC,SAA8C;AACnE;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAC,KAAD;AAEE,YAAA,WAAW,EAAEF,YAFf;AAGE,YAAA,SAAS,EAAEC,aAHb;AAIE,YAAA,QAAQ,EAAEC;AAJZ,aACOH,EADP;AAAA;AAAA;AAAA;AAAA;AAVF;AAiBD,OAlBA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAxCyC;AAA/BL,Y,CACJS,S,GAAY;AACjBN,EAAAA,KAAK,EAAEJ,SAAS,CAACW,OAAV,CACLX,SAAS,CAACY,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEdP,IAAAA,YAAY,EAAEP,SAAS,CAACe,MAAV,CAAiBD,UAFjB;AAGdN,IAAAA,aAAa,EAAER,SAAS,CAACe,MAAV,CAAiBD,UAHlB;AAIdL,IAAAA,IAAI,EAAET,SAAS,CAACe,MAAV,CAAiBD;AAJT,GAAhB,CADK,EAOLA,UARe,CASjB;;AATiB,C","sourcesContent":["import { Component } from 'react';\nimport { Image } from 'components/Image';\nimport { StyledGallery } from './styled';\nimport PropTypes from 'prop-types';\n\nexport class ImageGallery extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        webformatURL: PropTypes.string.isRequired,\n        largeImageURL: PropTypes.string.isRequired,\n        tags: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    // onClick: PropTypes.func.isRequired,\n  };\n  // handleImageClick = image => {\n  //   this.props.onClick(image);\n  // };\n\n  render() {\n    return (\n      <StyledGallery>\n        {this.props.items.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            // <Image\n            //   key={id}\n            //   smallImgUrl={webformatURL}\n            //   bigImgUrl={largeImageURL}\n            //   imgDescr={tags}\n            //   onClick={() =>\n            //     this.handleImageClick({ id, webformatURL, largeImageURL, tags })\n            //   }\n            // />\n            <Image\n              key={id}\n              smallImgUrl={webformatURL}\n              bigImgUrl={largeImageURL}\n              imgDescr={tags}\n            />\n          );\n        })}\n      </StyledGallery>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}