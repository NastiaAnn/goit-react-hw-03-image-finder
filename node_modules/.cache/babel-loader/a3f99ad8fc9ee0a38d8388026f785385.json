{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Goit/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx\";\nimport { Component } from 'react';\nimport { Image } from 'components/Image/Image';\nimport { StyledGallery } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isOpenModal: false,\n      selectedImage: null\n    };\n\n    this.openModal = image => {\n      this.setState({\n        isOpenModal: true,\n        selectedImage: image\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isOpenModal: false,\n        selectedImage: null\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StyledGallery, {\n        children: this.props.items.map(_ref => {\n          let {\n            id,\n            webformatURL,\n            largeImageURL,\n            tags\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Image, {\n            smallImgUrl: webformatURL,\n            bigImgUrl: largeImageURL,\n            imgDescr: tags,\n            onClick: () => this.openModal(largeImageURL)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), this.state.isOpenModal && /*#__PURE__*/_jsxDEV(Modal, {\n        imageUrl: this.state.selectedImage,\n        onClose: this.closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/Goit/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["Component","Image","StyledGallery","ImageGallery","state","isOpenModal","selectedImage","openModal","image","setState","closeModal","render","props","items","map","id","webformatURL","largeImageURL","tags"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CI,KAD0C,GAClC;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,aAAa,EAAE;AAFT,KADkC;;AAAA,SAM1CC,SAN0C,GAM9BC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAE,IADD;AAEZC,QAAAA,aAAa,EAAEE;AAFH,OAAd;AAID,KAXyC;;AAAA,SAa1CE,UAb0C,GAa7B,MAAM;AACjB,WAAKD,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAE,KADD;AAEZC,QAAAA,aAAa,EAAE;AAFH,OAAd;AAID,KAlByC;AAAA;;AAoB1CK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,aAAD;AAAA,kBACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,QAA+C;AAAA,cAA9C;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,YAAN;AAAoBC,YAAAA,aAApB;AAAmCC,YAAAA;AAAnC,WAA8C;AACnE,8BACE,QAAC,KAAD;AAEE,YAAA,WAAW,EAAEF,YAFf;AAGE,YAAA,SAAS,EAAEC,aAHb;AAIE,YAAA,QAAQ,EAAEC,IAJZ;AAKE,YAAA,OAAO,EAAE,MAAM,KAAKX,SAAL,CAAeU,aAAf;AALjB,aACOF,EADP;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAeG,KAAKX,KAAL,CAAWC,WAAX,iBACC,QAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,aADvB;AAEE,QAAA,OAAO,EAAE,KAAKI;AAFhB;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA7CyC","sourcesContent":["import { Component } from 'react';\nimport { Image } from 'components/Image/Image';\nimport { StyledGallery } from './styled';\n\nexport class ImageGallery extends Component {\n  state = {\n    isOpenModal: false,\n    selectedImage: null,\n  };\n\n  openModal = image => {\n    this.setState({\n      isOpenModal: true,\n      selectedImage: image,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isOpenModal: false,\n      selectedImage: null,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <StyledGallery>\n          {this.props.items.map(({ id, webformatURL, largeImageURL, tags }) => {\n            return (\n              <Image\n                key={id}\n                smallImgUrl={webformatURL}\n                bigImgUrl={largeImageURL}\n                imgDescr={tags}\n                onClick={() => this.openModal(largeImageURL)}\n              />\n            );\n          })}\n        </StyledGallery>\n\n        {this.state.isOpenModal && (\n          <Modal\n            imageUrl={this.state.selectedImage}\n            onClose={this.closeModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}