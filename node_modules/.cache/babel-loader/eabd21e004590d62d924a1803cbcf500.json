{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Goit/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx\";\nimport { Component } from 'react';\nimport { Image } from 'components/Image';\nimport { StyledGallery } from './styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleImageClick = image => {\n      this.props.onClick(image);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(StyledGallery, {\n      children: this.props.items.map(_ref => {\n        let {\n          id,\n          webformatURL,\n          largeImageURL,\n          tags\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Image, {\n          smallImgUrl: webformatURL,\n          bigImgUrl: largeImageURL,\n          imgDescr: tags,\n          onClick: () => this.handleImageClick({\n            id,\n            webformatURL,\n            largeImageURL,\n            tags\n          })\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nImageGallery.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired\n  })).isRequired,\n  onClick: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/admin/Desktop/Goit/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["Component","Image","StyledGallery","PropTypes","ImageGallery","handleImageClick","image","props","onClick","render","items","map","id","webformatURL","largeImageURL","tags","propTypes","arrayOf","shape","number","isRequired","string","func"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAY1CK,gBAZ0C,GAYvBC,KAAK,IAAI;AAC1B,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,KAAnB;AACD,KAdyC;AAAA;;AAgB1CG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,aAAD;AAAA,gBACG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqB,QAA+C;AAAA,YAA9C;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,YAAN;AAAoBC,UAAAA,aAApB;AAAmCC,UAAAA;AAAnC,SAA8C;AACnE,4BACE,QAAC,KAAD;AAEE,UAAA,WAAW,EAAEF,YAFf;AAGE,UAAA,SAAS,EAAEC,aAHb;AAIE,UAAA,QAAQ,EAAEC,IAJZ;AAKE,UAAA,OAAO,EAAE,MACP,KAAKV,gBAAL,CAAsB;AAAEO,YAAAA,EAAF;AAAMC,YAAAA,YAAN;AAAoBC,YAAAA,aAApB;AAAmCC,YAAAA;AAAnC,WAAtB;AANJ,WACOH,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAlCyC;AAA/BR,Y,CACJY,S,GAAY;AACjBN,EAAAA,KAAK,EAAEP,SAAS,CAACc,OAAV,CACLd,SAAS,CAACe,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAET,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,YAAY,EAAEV,SAAS,CAACkB,MAAV,CAAiBD,UAFjB;AAGdN,IAAAA,aAAa,EAAEX,SAAS,CAACkB,MAAV,CAAiBD,UAHlB;AAIdL,IAAAA,IAAI,EAAEZ,SAAS,CAACkB,MAAV,CAAiBD;AAJT,GAAhB,CADK,EAOLA,UARe;AASjBZ,EAAAA,OAAO,EAAEL,SAAS,CAACmB,IAAV,CAAeF;AATP,C","sourcesContent":["import { Component } from 'react';\nimport { Image } from 'components/Image';\nimport { StyledGallery } from './styled';\nimport PropTypes from 'prop-types';\n\nexport class ImageGallery extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        webformatURL: PropTypes.string.isRequired,\n        largeImageURL: PropTypes.string.isRequired,\n        tags: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n  handleImageClick = image => {\n    this.props.onClick(image);\n  };\n\n  render() {\n    return (\n      <StyledGallery>\n        {this.props.items.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <Image\n              key={id}\n              smallImgUrl={webformatURL}\n              bigImgUrl={largeImageURL}\n              imgDescr={tags}\n              onClick={() =>\n                this.handleImageClick({ id, webformatURL, largeImageURL, tags })\n              }\n            />\n          );\n        })}\n      </StyledGallery>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}